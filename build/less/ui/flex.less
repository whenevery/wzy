/**
 * flex布局
 * @param  {string} @flex-direction:column  主轴的方向
 * row：主轴为水平方向，起点在左端。
 * row-reverse：主轴为水平方向，起点在右端。
 * column：主轴为垂直方向，起点在上沿。
 * column-reverse：主轴为垂直方向，起点在下沿。
 * @param  {string} @justify-content:center 在主轴上的对齐方式
 * flex-start：左对齐
 * flex-end：右对齐
 * center： 居中
 * space-between：两端对齐，项目之间的间隔都相等
 * @param  {string} @align-items:center     在交叉轴上如何对齐。
 * flex-start：交叉轴的起点对齐。
 * flex-end：交叉轴的终点对齐。
 * center：交叉轴的中点对齐。
 * baseline: 项目的第一行文字的基线对齐。
 * stretch：如果项目未设置高度或设为auto，将占满整个容器的高度。
 *
 */
.flex(@flex-direction:row,@justify-content:center,@align-items:center){
  display: flex;
  .flex-direction(@flex-direction);
  .flex-justify-content(@justify-content);
  .flex-align-items(@align-items);
}
//主轴的方向
.flex-direction(@flex-direction) when (@flex-direction=row){
  flex-direction: row;
}
.flex-direction(@flex-direction) when (@flex-direction=row-reverse){
  flex-direction: row-reverse;
}
.flex-direction(@flex-direction) when (@flex-direction=column){
  flex-direction: column;
}
.flex-direction(@flex-direction) when (@flex-direction=column-reverse){
  flex-direction: column-reverse;
}
//主轴对齐方式
.flex-justify-content(@justify-content) when (@justify-content=flex-start){
  justify-content: @justify-content;
}
.flex-justify-content(@justify-content) when (@justify-content=flex-end){
  justify-content: @justify-content;
}
.flex-justify-content(@justify-content) when (@justify-content=center){
  justify-content: @justify-content;
}
.flex-justify-content(@justify-content) when (@justify-content=space-between){
  justify-content: @justify-content;
}
//交叉轴对齐方式
.flex-align-items(@align-items) when (@align-items=flex-start){
  align-items: @align-items;
}
.flex-align-items(@align-items) when (@align-items=flex-end){
  align-items: @align-items;
}
.flex-align-items(@align-items) when (@align-items=center){
  align-items: @align-items;
}
.flex-align-items(@align-items) when (@align-items=baseline){
  align-items: @align-items;
}
.flex-align-items(@align-items) when (@align-items=stretch){
  align-items: @align-items;
}

.flex-child(@display) when (@display=true){
  flex-grow: 1;
}
.flex-auto{
  .flex();
}